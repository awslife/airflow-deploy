---
apiVersion: v1
kind: Pod
metadata:
  name: {{ airflow_release_name }}-airflow-worker
spec:
  containers:
    - name: airflow-worker
      image: docker.io/apache/airflow:2.2.5-python3.8
      imagePullPolicy: IfNotPresent
      env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        # Hard Coded Airflow Envs
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ airflow_release_name }}-airflow-fernet-key
              key: fernet-key
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: {{ airflow_release_name }}-airflow-metadata
              key: connection
        - name: AIRFLOW_CONN_AIRFLOW_DB
          valueFrom:
            secretKeyRef:
              name: {{ airflow_release_name }}-airflow-metadata
              key: connection
      securityContext:
        privileged: true
        runAsUser: {{ airflow_uid }}
      volumeMounts:
        - mountPath: /opt/airflow/dags
          name: airflow-dags
          mountPropagation: Bidirectional
          readOnly: true
        - mountPath: /opt/airflow/logs
          name: airflow-logs
        - mountPath: /opt/airflow/airflow.cfg
          name: airflow-config
          readOnly: true
          subPath: airflow.cfg
    - name: s3fs
      image: docker.io/efrecon/s3fs:1.89
      imagePullPolicy: IfNotPresent
      env:
        - name: AWS_S3_URL
          value: {{ airflow_s3_url }}
        - name: AWS_S3_BUCKET
          value: {{ airflow_s3_bucket }}
        - name: AWS_S3_REGION
          value: ""
        - name: UID
          value: "{{ airflow_uid }}"
        - name: GID
          value: "{{ airflow_gid }}"
        - name: S3FS_ARGS
          value: use_path_request_style,allow_other,mp_umask=0022,umask=0133,dbglevel=info
        - name: AWS_S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ airflow_release_name }}-airflow-s3-secret
              key: aws_access_key_id
        - name: AWS_S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ airflow_release_name }}-airflow-s3-secret
              key: aws_secret_access_key
      resources: {}
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /opt/s3fs/bucket
          name: airflow-dags
          mountPropagation: Bidirectional
  restartPolicy: Never
  securityContext:
    runAsUser: {{ airflow_uid }}
    fsGroup: {{ airflow_gid }}
  serviceAccountName: "{{ airflow_release_name }}-airflow-worker-serviceaccount"
  volumes:
    - name: airflow-dags
      emptyDir: {}
    - name: airflow-logs
      emptyDir: {}
    - name: airflow-config
      configMap:
        name: {{ airflow_release_name }}-airflow-config
